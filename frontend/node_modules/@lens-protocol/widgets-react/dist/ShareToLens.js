var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import LensIcon from './LensIcon';
import { Theme, Size } from './types';
import { getContainerStyle, getTextStyle } from './utils';
export function ShareToLens(_a) {
    var content = _a.content, url = _a.url, via = _a.via, hashtags = _a.hashtags, _b = _a.theme, theme = _b === void 0 ? Theme["default"] : _b, _c = _a.size, size = _c === void 0 ? Size.medium : _c, _d = _a.title, title = _d === void 0 ? 'Share to Lens' : _d;
    function navigate() {
        var shareUrl = "https://lenster.xyz/?text=".concat(encodeURIComponent(content));
        if (url) {
            shareUrl = shareUrl + "&url=".concat(url);
        }
        if (via) {
            shareUrl = shareUrl + "&via=".concat(encodeURIComponent(via));
        }
        if (hashtags) {
            shareUrl = shareUrl + "&hashtags=".concat(hashtags);
        }
        window.open(shareUrl, '_newtab');
    }
    return (_jsxs("button", __assign({ onClick: navigate, style: getContainerStyle(theme, size) }, { children: [_jsx(LensIcon, { theme: theme, size: size }), _jsx("p", __assign({ style: getTextStyle(theme, size) }, { children: title }))] })));
}
//# sourceMappingURL=ShareToLens.js.map